{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React, { forwardRef } from 'react';\nimport { useRouter } from 'next/router';\nimport clsx from 'clsx';\nimport NextLink from 'next/link';\nimport MuiLink from '@material-ui/core/Link';\nvar NextComposed = /*#__PURE__*/forwardRef(function NextComposed(props, ref) {\n  var href = props.href,\n      as = props.as,\n      prefetch = props.prefetch,\n      other = _objectWithoutProperties(props, [\"href\", \"as\", \"prefetch\"]);\n\n  return __jsx(NextLink, {\n    href: href,\n    as: as,\n    prefetch: prefetch\n  }, __jsx(\"a\", _extends({\n    ref: ref\n  }, other)));\n});\n\nvar Link = function Link(_ref) {\n  var href = _ref.href,\n      classNameProps = _ref.className,\n      _ref$activeClassName = _ref.activeClassName,\n      activeClassName = _ref$activeClassName === void 0 ? 'active' : _ref$activeClassName,\n      other = _objectWithoutProperties(_ref, [\"href\", \"className\", \"activeClassName\"]);\n\n  var router = useRouter();\n  var pathname = typeof href === 'string' ? href : href.pathname;\n  var className = clsx(classNameProps, _defineProperty({}, activeClassName, router.pathname === pathname && activeClassName));\n  return __jsx(MuiLink, _extends({\n    component: NextComposed,\n    className: className,\n    href: href\n  }, other));\n};\n\nexport default Link;","map":null,"metadata":{},"sourceType":"module"}